{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAQC,SAASC,cAAc,kBAC/BC,EAAOF,SAASC,cAAc,iBAC9BE,EAASH,SAASC,cAAc,mBACvBD,SAASC,cAAc,mBActC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAERU,MAAK,EAACF,SAAEA,EAAUC,MAAAE,MACjBC,EAAArB,GAASsB,OAAOC,QAAQ,sBAAsBN,QAAeG,OAC7DI,QAAQC,IAAI,uBAAqBR,QAAiBG,MAAU,IAE7DM,OAAM,EAACT,SAAEA,EAAUC,MAAAS,MAClBN,EAAArB,GAASsB,OAAOM,QAAQ,qBAAqBX,QAAeU,OAC5DH,QAAQC,IAAI,sBAAoBR,QAAeU,MAAU,G,CA/BlDxB,SAASC,cAAc,SAE/ByB,iBAAiB,UAAU,SAAUC,GACxCA,EAAEC,iBACF,MAAMC,EAAeC,SAAS/B,EAAMgC,OAC9BC,EAAYF,SAAS5B,EAAK6B,OACTD,SAAS3B,EAAO4B,OACvC,IAAK,IAAIE,EAAI,EAAGA,EAAI9B,EAAO4B,MAAOE,GAAK,EAAG,CAExC7B,EAAc6B,EAAI,EADGJ,EAAeI,EAAID,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst submit = document.querySelector('[type=\"submit\"]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n  const initialDelay = parseInt(delay.value);\n  const delayStep = parseInt(step.value);\n  const promisesAmount = parseInt(amount.value);\n  for (let i = 0; i < amount.value; i += 1) {\n    const currentDelay = initialDelay + i * delayStep;\n    createPromise(i + 1, currentDelay);\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","delay2","$parcel$interopDefault","Notify","success","console","log","catch","delay3","failure","addEventListener","e","preventDefault","initialDelay","parseInt","value","delayStep","i"],"version":3,"file":"03-promises.d602a070.js.map"}