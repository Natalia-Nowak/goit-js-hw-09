{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQC,SAASC,cAAc,kBAC/BC,EAAOF,SAASC,cAAc,iBAC9BE,EAASH,SAASC,cAAc,mBACvBD,SAASC,cAAc,mBActC,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAEFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUI,EAAKD,EAALF,MACjBI,EAAAtB,GAASuB,OAAOC,QAAQ,sBAAqCC,OAAfR,EAAS,QAAYQ,OAANJ,EAAM,OACnEK,QAAQC,IAAI,uBAAwCF,OAAfR,EAAS,QAAYQ,OAANJ,EAAM,M,IAE3DO,OAAM,SAAAR,G,IAAGH,EAAQG,EAARH,SAAUY,EAAKT,EAALF,MAClBI,EAAAtB,GAASuB,OAAOO,QAAQ,qBAAoCL,OAAfR,EAAS,QAAYQ,OAANI,EAAM,OAClEH,QAAQC,IAAI,sBAAqCF,OAAfR,EAAS,QAAYQ,OAANI,EAAM,M,IA/BhD1B,SAASC,cAAc,SAE/B2B,iBAAiB,UAAU,SAAUC,GACxCA,EAAEC,iBAIF,IAHA,IAAMC,EAAeC,SAASjC,EAAMkC,OAC9BC,EAAYF,SAAS9B,EAAK+B,OAEvBE,GADcH,SAAS7B,EAAO8B,OAC1B,GAAGE,EAAIhC,EAAO8B,MAAOE,GAAK,EAAG,CAExC/B,EAAc+B,EAAI,EADGJ,EAAeI,EAAID,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst submit = document.querySelector('[type=\"submit\"]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n  const initialDelay = parseInt(delay.value);\n  const delayStep = parseInt(step.value);\n  const promisesAmount = parseInt(amount.value);\n  for (let i = 0; i < amount.value; i += 1) {\n    const currentDelay = initialDelay + i * delayStep;\n    createPromise(i + 1, currentDelay);\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","delay2","$parcel$interopDefault","Notify","success","concat","console","log","catch","delay3","failure","addEventListener","e","preventDefault","initialDelay","parseInt","value","delayStep","i"],"version":3,"file":"03-promises.f63daa6d.js.map"}